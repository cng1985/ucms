<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/cache   
    http://www.springframework.org/schema/cache/spring-cache.xsd"
	default-lazy-init="true">
	<context:annotation-config />
	<context:component-scan base-package="com.haoxuer.discover" />

	<!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 需要更改 -->
	<context:component-scan base-package="com.quhaodian.ucms" />
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:site.properties</value>
			</list>
		</property>
	</bean>
	<bean id="treeInterceptor" class="com.haoxuer.discover.common.hibernate.TreeIntercptor" />

	<bean id="dataSourcex"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="filters" value="stat" />

		<property name="maxActive" value="20" />
		<property name="initialSize" value="1" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="1" />

		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<property name="poolPreparedStatements" value="true" />
		<property name="maxOpenPreparedStatements" value="20" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSourcex" />
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQL55Dialect
				hibernate.show_sql=false
				hibernate.format_sql=true
				hibernate.query.substitutions=true 1, false 0
				hibernate.jdbc.batch_size=20
				hibernate.hbm2ddl.auto=update
			</value>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.haoxuer.discover.user.data.entity</value>
				<value>com.haoxuer.discover.article.data.entity</value>
				<value>com.haoxuer.discover.album.data.entity</value>
				<value>com.haoxuer.discover.question.data.entity</value>
				<value>com.quhaodian.ucms.data.entity</value>
				<value>com.haoxuer.discover.plug.data.entity</value>
				<value>com.haoxuer.discover.activity.data.entity</value>
				<value>com.haoxuer.discover.site.data.entity</value>
				<value>com.haoxuer.discover.bbs.data.entity</value>
				<value>com.haoxuer.discover.web.data.entity</value>
				<value>com.haoxuer.discover.area.data.entity</value>
				<value>com.haoxuer.discover.quartz.data.entity</value>
				<value>com.haoxuer.discover.team.data.entity</value>
				<value>com.haoxuer.discover.userfriend.data.entity</value>
				<value>com.haoxuer.discover.notice.data.entity</value>

			</list>
		</property>
		<property name="entityInterceptor" ref="treeInterceptor">
		</property>
	</bean>
	<bean id="transactionManager"
		  class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven />


	<!-- 缓存 属性 -->
	<bean id="cacheManagerFactory"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
		<property name="shared" value="true" />



	</bean>

	<!-- 支持缓存注解 -->
	<cache:annotation-driven cache-manager="cacheManager" />
	<!-- 默认是cacheManager -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="cacheManagerFactory" />
	</bean>
</beans>